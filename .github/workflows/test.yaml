name: test
on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - 'dev'
      - 'master'

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v3
      - name: Go Version
        uses: actions/setup-go@v3
        with:
          go-version: '1.22'
      - name: test
        env:
          LD_LIBRARY_PATH: ${{ github.workspace }}/libs
          LITE_SERVERS: ${{ secrets.LITE_SERVERS }}
        run: |
          sudo apt-get install -y libsecp256k1-0
          mkdir -p ${{ env.LD_LIBRARY_PATH}}
          wget https://github.com/tonkeeper/tongo/raw/master/lib/linux/libemulator.so -O ${{ env.LD_LIBRARY_PATH}}/libemulator.so
          make test
            - adı: .NET Core SDK Kurulumu
  kullanımlar: actions/setup-dotnet@v4.0.1
  ile:
    # Kullanılacak isteğe bağlı SDK sürümü(leri). Sağlanmazsa, global.json sürümü mevcut olduğunda yüklenecektir. Örnekler: 2.2.104, 3.1, 3.1.x, 3.x, 6.0.2xx
    dotnet-version: # isteğe bağlı
    # Yapının isteğe bağlı kalitesi. Olası değerler şunlardır: günlük, imzalanmış, doğrulanmış, önizleme, ga.
    dotnet-quality: # isteğe bağlı
    # Global.json dosyanız deponun kökünde yer almıyorsa, isteğe bağlı global.json konumu.
    global-json-dosyası: # isteğe bağlı
    # Kimlik doğrulamasını ayarlamak için isteğe bağlı paket kaynağı. Depo kökündeki mevcut herhangi bir NuGet.config'e danışacak ve ClearTextPassword olarak NUGET_AUTH_TOKEN ortam değişkenini kullanarak geçici bir NuGet.config sağlayacaktır
    kaynak-url: # isteğe bağlı
    # GitHub Paket Kaydı'ndan paketleri kullanmak için isteğe bağlı SAHİP, geçerli deponun sahibi dışındaki kuruluşlar/kullanıcılar. Yalnızca kaynak-url'de bir GPR URL'si de sağlanmışsa kullanılır
    sahip: # isteğe bağlı
    # İsteğe bağlı NuGet.config konumu, NuGet.config dosyanız deponun kökünde bulunmuyorsa.
    yapılandırma dosyası: # isteğe bağlı
    # NuGet global-packages klasörünün önbelleğe alınmasını etkinleştirmek için isteğe bağlı girdi
    önbellek: # isteğe bağlı
    # Bir bağımlılık dosyasının yolunu belirtmek için kullanılır: packages.lock.json. Birden fazla bağımlılığı önbelleğe almak için joker karakterleri veya dosya adları listesini destekler.
    önbellek-bağımlılık-yolu: # isteğe bağlı
          
